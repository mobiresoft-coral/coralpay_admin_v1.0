{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/components/ui/sonner.tsx"],"sourcesContent":["\"use client\"\n\nimport { useTheme } from \"next-themes\"\nimport { Toaster as Sonner, ToasterProps } from \"sonner\"\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme()\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  )\n}\n\nexport { Toaster }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,wRAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6WAAC,wQAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/hooks/useInitialRender.ts"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nexport const useInitialRender = () => {\n  const [initialRenderComplete, setInitialRenderComplete] = useState<boolean>(false);\n\n  useEffect(() => {\n    setInitialRenderComplete(true);\n  }, []);\n\n  return initialRenderComplete;\n};\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,MAAM,mBAAmB;IAC9B,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAW;IAE5E,CAAA,GAAA,oUAAA,CAAA,YAAS,AAAD,EAAE;QACR,yBAAyB;IAC3B,GAAG,EAAE;IAEL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/hooks/useReloadContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useMemo } from 'react';\n\ninterface ReloadContextProps {\n  triggerReload: () => void;\n  shouldReload: boolean;\n}\n\nconst ReloadContext = createContext<ReloadContextProps | undefined>(undefined);\n\nexport const ReloadProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [shouldReload, setShouldReload] = useState(false);\n\n  const triggerReload = () => {\n    setShouldReload(true);\n    setTimeout(() => setShouldReload(false), 0);\n  };\n\n  const contextValue = useMemo(() => ({ triggerReload, shouldReload }), [shouldReload]);\n\n  return <ReloadContext.Provider value={contextValue}>{children}</ReloadContext.Provider>;\n};\n\nexport const useReloadContext = () => {\n  const context = useContext(ReloadContext);\n  if (!context) {\n    throw new Error('useReloadContext must be used within a ReloadProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":";;;;;AAAA;;;AAOA,MAAM,8BAAgB,CAAA,GAAA,oUAAA,CAAA,gBAAa,AAAD,EAAkC;AAE7D,MAAM,iBAA0D,CAAC,EAAE,QAAQ,EAAE;IAClF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,oUAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,gBAAgB;QACpB,gBAAgB;QAChB,WAAW,IAAM,gBAAgB,QAAQ;IAC3C;IAEA,MAAM,eAAe,CAAA,GAAA,oUAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAC;YAAE;YAAe;QAAa,CAAC,GAAG;QAAC;KAAa;IAEpF,qBAAO,6WAAC,cAAc,QAAQ;QAAC,OAAO;kBAAe;;;;;;AACvD;AAEO,MAAM,mBAAmB;IAC9B,MAAM,UAAU,CAAA,GAAA,oUAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/config/index.ts"],"sourcesContent":["export const API_BASE_URL = process.env.NEXT_PUBLIC_API_BASE_URL || \"/api/v1\";\n\nexport const API_AUTH_URL = \"/auth\";\n\nexport const sessionStorageName = \"coralPaySession\";\n"],"names":[],"mappings":";;;;;AAAO,MAAM,eAAe,QAAQ,GAAG,CAAC,wBAAwB,IAAI;AAE7D,MAAM,eAAe;AAErB,MAAM,qBAAqB","debugId":null}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/store/slice/userService/userService.ts"],"sourcesContent":["\"use client\";\n\nimport { sessionStorageName } from \"@/config\";\nimport { User } from \"@/types\";\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\nlet sessionStorageState;\nif (typeof window !== \"undefined\") {\n  sessionStorageState = sessionStorage.getItem(sessionStorageName);\n}\n\ninterface UserState {\n  user: Partial<User>;\n}\n\nconst initialState: UserState = sessionStorageState\n  ? {\n      user: { ...JSON.parse(sessionStorageState) },\n    }\n  : {\n      user: {\n        isAuthenticated: false,\n      },\n    };\n\nconst userServiceSlice = createSlice({\n  name: \"userService\",\n  initialState,\n  reducers: {\n    setUserToken: (state, action: PayloadAction<Partial<User>>) => {\n      state.user = {\n        ...action.payload,\n      };\n      sessionStorage.setItem(sessionStorageName, JSON.stringify(state.user));\n    },\n    setUser: (state, action: PayloadAction<Partial<User>>) => {\n      state.user = {\n        ...action.payload,\n      };\n      sessionStorage.setItem(sessionStorageName, JSON.stringify(state.user));\n    },\n    updateUser: (state, action: PayloadAction<Partial<User>>) => {\n      if (state?.user) {\n        state.user = { ...state.user, ...action.payload };\n        sessionStorage.setItem(sessionStorageName, JSON.stringify(state.user));\n      }\n    },\n    logoutUser: (state) => {\n      state.user = {\n        ...{\n          isAuthenticated: false,\n        },\n      };\n      sessionStorage.setItem(sessionStorageName, JSON.stringify(state.user));\n      sessionStorage.removeItem(\"cac\");\n    },\n  },\n});\n\nexport const { setUser, updateUser, logoutUser, setUserToken } =\n  userServiceSlice.actions;\n\nexport default userServiceSlice.reducer;\n"],"names":[],"mappings":";;;;;;;AAEA;AAEA;AAJA;;;AAMA,IAAI;AACJ;;AAQA,MAAM,eAA0B,sBAC5B;IACE,MAAM;QAAE,GAAG,KAAK,KAAK,CAAC,oBAAoB;IAAC;AAC7C,IACA;IACE,MAAM;QACJ,iBAAiB;IACnB;AACF;AAEJ,MAAM,mBAAmB,CAAA,GAAA,kYAAA,CAAA,cAAW,AAAD,EAAE;IACnC,MAAM;IACN;IACA,UAAU;QACR,cAAc,CAAC,OAAO;YACpB,MAAM,IAAI,GAAG;gBACX,GAAG,OAAO,OAAO;YACnB;YACA,eAAe,OAAO,CAAC,+GAAA,CAAA,qBAAkB,EAAE,KAAK,SAAS,CAAC,MAAM,IAAI;QACtE;QACA,SAAS,CAAC,OAAO;YACf,MAAM,IAAI,GAAG;gBACX,GAAG,OAAO,OAAO;YACnB;YACA,eAAe,OAAO,CAAC,+GAAA,CAAA,qBAAkB,EAAE,KAAK,SAAS,CAAC,MAAM,IAAI;QACtE;QACA,YAAY,CAAC,OAAO;YAClB,IAAI,OAAO,MAAM;gBACf,MAAM,IAAI,GAAG;oBAAE,GAAG,MAAM,IAAI;oBAAE,GAAG,OAAO,OAAO;gBAAC;gBAChD,eAAe,OAAO,CAAC,+GAAA,CAAA,qBAAkB,EAAE,KAAK,SAAS,CAAC,MAAM,IAAI;YACtE;QACF;QACA,YAAY,CAAC;YACX,MAAM,IAAI,GAAG;gBACX,GAAG;oBACD,iBAAiB;gBACnB,CAAC;YACH;YACA,eAAe,OAAO,CAAC,+GAAA,CAAA,qBAAkB,EAAE,KAAK,SAAS,CAAC,MAAM,IAAI;YACpE,eAAe,UAAU,CAAC;QAC5B;IACF;AACF;AAEO,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,EAAE,YAAY,EAAE,GAC5D,iBAAiB,OAAO;uCAEX,iBAAiB,OAAO","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/store/rootReducer.ts"],"sourcesContent":["import { combineReducers } from \"@reduxjs/toolkit\";\nimport userServiceReducer from \"./slice/userService/userService\";\n\nconst rootReducer = combineReducers({\n  userService: userServiceReducer,\n});\n\nexport default rootReducer;\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,cAAc,CAAA,GAAA,yLAAA,CAAA,kBAAe,AAAD,EAAE;IAClC,aAAa,4IAAA,CAAA,UAAkB;AACjC;uCAEe","debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storageSession from 'redux-persist/lib/storage/session';\nimport rootReducer from './rootReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storageSession\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false\n    })\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n\n// Type helpers\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;AAEA,MAAM,gBAAgB;IACpB,KAAK;IACL,SAAS,qQAAA,CAAA,UAAc;AACzB;AAEA,MAAM,mBAAmB,CAAA,GAAA,6SAAA,CAAA,iBAAc,AAAD,EAAE,eAAe,oHAAA,CAAA,UAAW;AAElE,MAAM,QAAQ,CAAA,GAAA,kYAAA,CAAA,iBAAc,AAAD,EAAE;IAC3B,SAAS;IACT,YAAY,CAAC,uBACX,qBAAqB;YACnB,mBAAmB;QACrB;AACJ;AAEA,MAAM,YAAY,CAAA,GAAA,ySAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/store/provider.tsx"],"sourcesContent":["import { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from '.';\n\nexport function ReduxProviders({ children }: { children: React.ReactNode }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        {children}\n      </PersistGate>\n    </Provider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEO,SAAS,eAAe,EAAE,QAAQ,EAAiC;IACxE,qBACE,6WAAC,kSAAA,CAAA,WAAQ;QAAC,OAAO,8GAAA,CAAA,QAAK;kBACpB,cAAA,6WAAC,sQAAA,CAAA,cAAW;YAAC,SAAS;YAAM,WAAW,8GAAA,CAAA,YAAS;sBAC7C;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/app/queryHandler/useQuery.tsx"],"sourcesContent":["import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { FC, ReactNode } from \"react\";\n\nconst queryClient = new QueryClient();\n\ninterface UseQueryProviderProps {\n  children: ReactNode;\n}\n\nconst UseQueryProvider: FC<UseQueryProviderProps> = ({ children }) => {\n  return (\n    <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n  );\n};\n\nexport default UseQueryProvider;\n"],"names":[],"mappings":";;;;AAAA;AAAA;;;AAGA,MAAM,cAAc,IAAI,sPAAA,CAAA,cAAW;AAMnC,MAAM,mBAA8C,CAAC,EAAE,QAAQ,EAAE;IAC/D,qBACE,6WAAC,sRAAA,CAAA,sBAAmB;QAAC,QAAQ;kBAAc;;;;;;AAE/C;uCAEe","debugId":null}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/adigu/Documents/ReactProject/coralpay_admin_v1.0/app/queryHandler/Providers.tsx"],"sourcesContent":["\"use client\";\n\nimport { Toaster } from \"@/components/ui/sonner\";\nimport { useInitialRender } from \"@/hooks/useInitialRender\";\nimport { ReloadProvider } from \"@/hooks/useReloadContext\";\nimport { ReduxProviders } from \"@/store/provider\";\nimport UseQueryProvider from \"./useQuery\";\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const isInitialRenderComplete = useInitialRender();\n\n  if (!isInitialRenderComplete) return null;\n\n  return (\n    <UseQueryProvider>\n      <ReloadProvider>\n        <ReduxProviders>\n          {children}\n          <Toaster />\n        </ReduxProviders>\n      </ReloadProvider>\n    </UseQueryProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,MAAM,0BAA0B,CAAA,GAAA,yHAAA,CAAA,mBAAgB,AAAD;IAE/C,IAAI,CAAC,yBAAyB,OAAO;IAErC,qBACE,6WAAC,gIAAA,CAAA,UAAgB;kBACf,cAAA,6WAAC,0HAAA,CAAA,iBAAc;sBACb,cAAA,6WAAC,kHAAA,CAAA,iBAAc;;oBACZ;kCACD,6WAAC,2HAAA,CAAA,UAAO;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}